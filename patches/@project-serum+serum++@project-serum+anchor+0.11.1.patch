diff --git a/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/provider.js b/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/provider.js
index 4ce75cb..1a31e38 100644
--- a/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/provider.js
+++ b/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/provider.js
@@ -152,7 +152,7 @@ class NodeWallet {
         this.payer = payer;
     }
     static local() {
-        const payer = web3_js_1.Keypair.fromSecretKey(Buffer.from(JSON.parse(require("fs").readFileSync(require("os").homedir() + "/.config/solana/id.json", {
+        const payer = web3_js_1.Keypair.fromSecretKey(Buffer.from(JSON.parse(require("react-native-level-fs").readFileSync(require("os").homedir() + "/.config/solana/id.json", {
             encoding: "utf-8",
         }))));
         return new NodeWallet(payer);
diff --git a/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/workspace.js b/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/workspace.js
index 31ca81a..30f3478 100644
--- a/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/workspace.js
+++ b/node_modules/@project-serum/serum/node_modules/@project-serum/anchor/dist/cjs/workspace.js
@@ -41,7 +41,7 @@ const workspace = new Proxy({}, {
             console.log("Workspaces aren't available in the browser");
             return undefined;
         }
-        const fs = require("fs");
+        const fs = require("react-native-level-fs");
         const process = require("process");
         if (!_populatedWorkspace) {
             const path = require("path");
@@ -89,7 +89,7 @@ function attachWorkspaceOverride(workspaceCache, overrideConfig, idlMap) {
         const overrideAddress = new web3_js_1.PublicKey(typeof entry === "string" ? entry : entry.address);
         let idl = idlMap.get(programName);
         if (typeof entry !== "string" && entry.idl) {
-            idl = JSON.parse(require("fs").readFileSync(entry.idl, "utf-8"));
+            idl = JSON.parse(require("react-native-level-fs").readFileSync(entry.idl, "utf-8"));
         }
         workspaceCache[wsProgramName] = new program_1.Program(idl, overrideAddress);
     });
